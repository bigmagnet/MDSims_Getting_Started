# specify the information for which molecules to run. Only necessary when using with automate.py
[automate]
num_mols = None # the number of molecules to run. Input 'all' to run every molecule
# if all was not specified, input the name of each molecule with keys mol#
mol1 = None
mol2 = None
mol3 = None 
surface_dir = None # specify the directory where the surface files are stored. This must include a pdb correctly
# named and shifted pdb called 'surface_type_valid.pdb' and an str called 'surface_type.str'
num_boxes = int # the number of boxes to run
box_folder = None
sim_folder = None
# specify number of unique parameters to use. This is useful for the automation of running a single molecule
# at different temperatures. The user will have to edit a new script_params.ini for each unique run of any script
# a single job is submitted which will run every unique run
unique_params = int # there should be as many box_folders as there are unique packmol runs

# the following section are the submit parameters. These are used only by mm_test.py to write the .sh files
[packmol_vmd_sub]
node_type = node # bora or hima
env = None
job_name = None
script = file
run = bool

[pdb_merge_sub]
node_type = node # bora or hima
env = None
job_name = None
script = file

[openmm_sub]
node_type = node # bora or hima
gpu = bool # yes or no
env = None
job_name = None
script = file
run = bool

[inter_sub]
node_type = node # bora or hima
num_nodes = int # requested nodes. Currently 5/20 to shorten que time
processors_pn = int # processors per node. Currently only 10/20 due to suspected memory issues
np = int # number of processes. processes per node is calculated automatically
env = None
job_name = None
script = file
run = bool

[intra_sub]
node_type = node # bora or hima
num_nodes = int # requested nodes. Currently 5/20 to shorten que time
processors_pn = int # processors per node. Currently only 10/20 due to suspected memory issues
np = int # number of processes. processes per node is calculated automatically
env = None
job_name = None
script = file
run = bool

[diffusion_sub]
node_type = node # bora or hima
env = None
job_name = None
script = file
run = bool

[results_sub]
node_type = node # bora or hima
env = None
job_name = None
script = file
run = bool
table_rows = None

[folders]
sim_folder = None # the folder inside the molecule folder where the each run's simualtion results are stored
box_folder = None # the folder inside the molecule folder where each box's information is stored

[shared]
# specify parameters that are shared between different scripts
temp = float #kelvin. This is shared by openmm and diffusion (diffusion needs it for the finite box size corretion)
x_len = float
y_len = float
z_len = float
z_min = float
z_max = float

[packmol_vmd]
# this is currently empty so that validate_script_params works fine

[pdb_merge]

[openmm]
# equilibration parameters
equil_steps = int
# simulation parameters
sim_steps = int
v_to_t_steps = int # number to steps between setting the velocities to temperature
gpu = bool

[inter]
mol_fraction = float # fraction of hydrogens to sample
lag_fraction = float # fraction of the max lag time to the total simulation time
cutoff_distance = float # distance in A to use when checking for valid intermolecular pairs

[intra]
mol_fraction = float # fraction of hydrogens to sample
lag_fraction = float # fraction of the max lag time to the total simulation time

[diffusion]
# drop the first (start) or last (end) fraction of of the mean squared displacement
drop_start = float
drop_end = float