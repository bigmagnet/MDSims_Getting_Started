Welcome to the guide for adding a new molecule to the simulation pipeline!

1. Create the molecule in Gaussian or Avogadro. 

Gaussian Instructions:
1. Draw molecule in Gaussian
2. Perform optimization with 631-G basis set
3. Save output .chk file as molecule_name.pdb by changing extension. 
NOTE: There are plenty of great Gaussian tutorials out there, Hence the general lack of information. The internet is our best friend.
Avogadro Instructions:
1. Draw the molecule in Avogadro
2. Click on the image of E with a green arrow pointing downwards (top center of screen). This opens a bar on the left of the screen. 
   Click start on this bar.
3. Once that is done, file->save as-> and save a pdb with molecule_name.pdb

2. If you don't have one already, make an account here: https://www.charmm-gui.org/?doc=sign
3. on the left side of the screen, find Ligand Reader and Modeler. 
4. re-draw the molecule and upload your pdb. 
5. The Program searches through its files for the moleculeâ€™s topology there are three possible end cases
    a. The molecule's topology is located in one of the six force field topology (RTF) files. In this case, the molecule's topology
       is fully specified by this file. 
    b. The molecule's topology is located in one of the additional stream (STR) files. In this case, the molecule's topology is fully 
       specified by this file and the corresponding force field topology file. The correct file is usually clear from the file naming
       conventions (the file toppar_all36_lipid_model.str, which contains n-decane, relies on top_all36_lipid.rtf). If this is not the
       case, The correct topology file can be identified by shared atom names. Download this STR
    c. The molecule's topology file is not found in the CHARMM36 files
6. If the molecule's topology is found, the program outputs the file that contains it and the molecule's residue name. If the molecule
   is not found, the program will ask for a residue name and generate topology and parameter files for the molecule (I find it easiest
   to combine these into a .str file. Download this str). In both cases, a new PDB is output in which the atom names and atom order match the topology
   file. Download this PDB.
7. The Ligand Reader & Modeler makes two mistakes when generating this PDB. Firstly, if the molecule is found in the C36 files,
   it will have the incorrect residue name. Secondly, atom lines will begin with 'ATOM' instead of 'HETATM'; 'HETATM' should be used
   for small molecules. These problems can be easily fixed by the user. Alternatively, run fix_ligand_modeler_pdb.py with the command
   "python input_pdb output_pdb resname" This will automatically add the correct resname and replace 'ATOM' with 'HETATM'

NOTE: there is an altnerative to this. If your molecule is complicated, you might not want to draw it again (I didn't want to draw
DGEBA in CHARMM-GUI that's for sure). https://cgenff.silcsbio.com/ will take your pdb and generate an str with topology and parameter
information. It will NOT check if your molecule is already in CHARMM36. We can get slightly more accurate numbers if our molecules are
already in CHARMM36. But if biologist don't care about your molecule, then it will not exist already (acetone didn't exist so...)
Here are some instructions for using this program.
1. When I have more time, I will come back and add this. 

Additional instructions for compatibility with MDSim_Automate.py
Each molecule has a label that is associated with it. We will call that label 'label' for now. We use this label when telling
MDSim_automate.py that we want to simulate this molecule, and to assign constants to this molecule. The pdb generated in part 8
should be named have the path 'MDSim/data/single_molecule_data/label/label_valid.pdb'. In MDSim/scripts/constants.py, the
function count_mols_in_box needs to be updated. Add another key value pair into the ref_density dictionary with key=label and 
value=density as STP. I like to find these at pubchem. Do the same for ref_molar_mass. Also the function get_CHARMM_files needs
to be updated. Add a key-value pair into ref_mols, with key=label and value=the forcefield used. The elif statements show that
one str, rtf, and prm file is submitted to OpenMM. If the str was generated by CHARMM-GUI for CGenFF, then copy that into 
MDSim/toppar/label.str. That should about do it. In the MDSim/logs/runx.ini, specify molx=label to simulate this molecule.
